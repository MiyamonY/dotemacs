# -*- mode: snippet -*-
# name: permutations
# key: permutations
# --
fn permutations<T: Copy>(vs: &[T]) -> Vec<Vec<T>> {
    match vs.split_first() {
        None => vec![vec![]],
        Some((first, rest)) => permutations(rest)
            .into_iter()
            .flat_map(|r| {
                let mut inserted = vec![];
                for i in 0..r.len() + 1 {
                    let mut s = r.clone();
                    s.insert(i, *first);
                    inserted.push(s)
                }
                inserted
            })
            .collect(),
    }
}
